---
import type { TransitionDirectionalAnimations } from "@types/astro.js";

import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const storyEntries = await getCollection("stories");
  return storyEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const customAnimation = ({
  delay,
  duration,
}: {
  delay?: string;
  duration?: string;
} = {}): TransitionDirectionalAnimations => ({
  forwards: {
    old: [
      {
        name: "astroFadeOut",
        duration: duration ?? "90ms",
        easing: "linear",
        fillMode: "both",
      },
      {
        name: "customSlideToLeft",
        duration: duration ?? "220ms",
        easing: "linear",
        fillMode: "both",
      },
    ],
    new: [
      {
        name: "astroFadeIn",
        duration: duration ?? "210ms",
        easing: "linear",
        delay: delay ?? "30ms",
        fillMode: "both",
      },
      {
        name: "customSlideFromRight",
        duration: duration ?? "220ms",
        easing: "linear",
        fillMode: "both",
      },
    ],
  },
  backwards: {
    old: [{ name: "astroFadeOut" }, { name: "customSlideToRight" }],
    new: [{ name: "astroFadeIn" }, { name: "customSlideFromLeft" }],
  },
});
---

<BaseLayout>
  <a
    href="/"
    class="border absolute top-4 right-4 px-3 py-2 flex items-center gap-1 font-semibold font-sans text-xs uppercase"
  >
    <span class="">â€¹</span> Back
  </a>
  <div class="top max-w-4xl mx-auto text-center">
    <h1 class="title" transition:animate={customAnimation({ delay: "100ms" })}>
      {entry.data.title}
    </h1>
    <p
      class="lead max-w-2xl mx-auto text-gray-700"
      transition:animate={customAnimation({ delay: "200ms" })}
    >
      {entry.data.excerpt}
    </p>
    <p
      class="text-gray-700 text-xs"
      transition:animate={customAnimation({ delay: "300ms" })}
    >
      By {entry.data.author}
    </p>
  </div>
  <Image
    src={entry.data.image.src}
    width={entry.data.image.width}
    height={entry.data.image.height}
    class="w-full"
    style="contain: paint;"
    alt=""
    transition:name={`img-story-${entry.slug}`}
  />
  <div class="max-w-3xl mx-auto flex flex-col gap-6 px-5 py-10">
    <p class="intro mx-auto text-center">
      {entry.data.intro}
    </p>
    <div class="bg-yellow-700 h-1 w-10 self-center"></div>
    <Content />
  </div>
</BaseLayout>

<style is:global>
  @keyframes customSlideFromRight {
    from {
      transform: translateX(2%);
    }
  }

  @keyframes customSlideFromLeft {
    from {
      transform: translateX(-2%);
    }
  }

  @keyframes customSlideToRight {
    to {
      transform: translateX(2%);
    }
  }

  @keyframes customSlideToLeft {
    to {
      transform: translateX(-2%);
    }
  }

  @keyframes spin {
    to {
      transform: rotate(30deg);
    }
  }
</style>

<style>
  .top {
    padding-bottom: clamp(2rem, 6vw, 5rem);
    padding-top: clamp(1rem, 3vw, 2rem);

    & * + * {
      margin-top: clamp(1rem, 2vw, 1.25rem);
    }
  }

  .title {
    font-size: clamp(1.75rem, 4.5vw, 3.5rem);
    line-height: 1.25;
    text-wrap: balance;
  }

  .lead {
    font-size: clamp(0.875rem, 2vw, 1.125rem);
    line-height: calc(2px + 3ex + 2px);
  }

  .intro {
    font-size: clamp(1.25rem, 2vw, 2rem);
    line-height: 1.5;
    text-wrap: pretty;
  }
</style>
